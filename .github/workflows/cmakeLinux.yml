name: Linux Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout do repositório e submódulos
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          submodules: recursive

      # 2️⃣ Atualiza pacotes e instala dependências
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            cmake g++ ninja-build \
            libcurl4-gnutls-dev libfreetype6-dev libgif-dev libgtest-dev \
            libjpeg-dev libpixman-1-dev libpng-dev libsdl2-dev libsdl2-image-dev \
            libtinyxml2-dev libwebp-dev libx11-dev libxcursor-dev \
            libnode-dev zlib1g-dev libarchive-dev libfuse2

      # 3️⃣ Remove build antigo, se existir (evita conflito do CMakeCache.txt)
      - name: Prepare build directory
        run: |
          rm -rf build
          mkdir build

      # 4️⃣ Gera arquivos de build com CMake e compila com Ninja
      - name: Configure and Build
        run: |
          cd build
          cmake -G Ninja -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} ..
          ninja libresprite

      # 5️⃣ Cria o AppImage
      - name: Package AppImage
        run: |
          cd build/bin
          export ARCH="$(uname -m)"
          sh ../../package_linux.sh
          mv ./LibreSprite-anylinux-$ARCH.AppImage ../../

      # 6️⃣ Faz upload do artefato compilado
      - name: Upload artifact
        if: runner.arch == 'X64'
        uses: actions/upload-artifact@v4
        with:
          name: libresprite-linux-x86_64
          path: LibreSprite-anylinux-x86_64.AppImage
          if-no-files-found: error
